# Backend build
FROM golang:1.20-alpine3.17


RUN apk update
RUN apk --no-cache add \
    git \
    make \
    gcc \
    g++ \
    musl-dev \
    tesseract-ocr-dev \
    imagemagick \
    imagemagick-dev \
    poppler-utils 

RUN go install github.com/go-delve/delve/cmd/dlv@v1.9.0

WORKDIR /

RUN wget https://github.com/jgm/pandoc/releases/download/2.18/pandoc-2.18-linux-amd64.tar.gz
RUN tar -xvf pandoc-2.18-linux-amd64.tar.gz
RUN rm  pandoc-2.18-linux-amd64.tar.gz

RUN addgroup -S -g 1000 virtualpaper && \
    adduser -S -H -D -h /data -u 1000 -G virtualpaper virtualpaper

WORKDIR /virtualpaper

VOLUME ["/data"]
VOLUME ["/config"]
VOLUME ["/input"]
VOLUME ["/usr/share/tessdata/"]
VOLUME ["/virtualpaper"]
VOLUME ["/go/pkg/"]

ENV VIRTUALPAPER_PROCESSING_DATA_DIR="/data"
ENV VIRTUALPAPER_PROCESSING_INPUT_DIR="/input"
ENV VIRTUALPAPER_LOGGING_DIRECTORY="/log"

ENV VIRTUALPAPER_PROCESSING_PANDOC_BIN="/pandoc-2.18/bin/pandoc"
ENV VIRTUALPAPER_PROCESSING_PDFTOTEXT_BIN="/usr/bin/pdftotext"
ENV VIRTUALPAPER_PROCESSING_IMAGICK_BIN="/usr/bin/convert"

EXPOSE 8000:8000


