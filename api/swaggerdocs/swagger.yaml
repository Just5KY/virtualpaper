consumes:
- application/json
definitions:
  DocumentProcessStep:
    properties:
      document_id:
        type: string
        x-go-name: DocumentId
      step:
        type: string
        x-go-name: Step
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
  DocumentResponse:
    description: DocumentResponse
    properties:
      content:
        type: string
        x-go-name: Content
      created_at:
        format: int64
        type: integer
        x-go-name: CreatedAt
      date:
        format: int64
        type: integer
        x-go-name: Date
      description:
        type: string
        x-go-name: Description
      download_url:
        type: string
        x-go-name: DownloadUrl
      filename:
        type: string
        x-go-name: Filename
      id:
        format: uuid
        type: string
        x-go-name: Id
      metadata:
        items:
          $ref: '#/definitions/Metadata'
        type: array
        x-go-name: Metadata
      mimetype:
        type: string
        x-go-name: Mimetype
      name:
        type: string
        x-go-name: Name
      pretty_size:
        type: string
        x-go-name: PrettySize
      preview_url:
        type: string
        x-go-name: PreviewUrl
      size:
        format: int64
        type: integer
        x-go-name: Size
      status:
        type: string
        x-go-name: Status
      tags:
        items:
          $ref: '#/definitions/Tag'
        type: array
        x-go-name: Tags
      type:
        type: string
        x-go-name: Type
      updated_at:
        format: int64
        type: integer
        x-go-name: UpdatedAt
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
  DocumentUpdateRequestBody:
    description: DocumentUpdateRequest
    properties:
      date:
        format: int64
        type: integer
        x-go-name: Date
      description:
        type: string
        x-go-name: Description
      filename:
        type: string
        x-go-name: Filename
      metadata:
        items:
          $ref: '#/definitions/metadataRequest'
        type: array
        x-go-name: Metadata
      name:
        type: string
        x-go-name: Name
    type: object
    x-go-name: DocumentUpdateRequest
    x-go-package: tryffel.net/go/virtualpaper/api
  ForceDocumumentsProcessing:
    properties:
      document_id:
        type: string
        x-go-name: DocumentId
      from_step:
        type: string
        x-go-name: FromStep
      user_id:
        format: int64
        type: integer
        x-go-name: UserId
    title: ForceDocumentsProcessingRequest describes request to force processing of documents.
    type: object
    x-go-name: ForceDocumentProcessingRequest
    x-go-package: tryffel.net/go/virtualpaper/api
  Metadata:
    description: Metadata is metadata key-value pair assigned to document
    properties:
      key:
        type: string
        x-go-name: Key
      key_id:
        format: int64
        type: integer
        x-go-name: KeyId
      value:
        type: string
        x-go-name: Value
      value_id:
        format: int64
        type: integer
        x-go-name: ValueId
    type: object
    x-go-package: tryffel.net/go/virtualpaper/models
  MetadataKey:
    properties:
      comment:
        type: string
        x-go-name: Comment
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      id:
        format: int64
        type: integer
        x-go-name: Id
      key:
        type: string
        x-go-name: Key
    type: object
    x-go-package: tryffel.net/go/virtualpaper/models
  MetadataValue:
    properties:
      comment:
        type: string
        x-go-name: Comment
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      id:
        format: int64
        type: integer
        x-go-name: Id
      key:
        type: string
        x-go-name: Key
      match_documents:
        description: MatchDocuments instructs to try to automatically match MetadataValue inside documents
        type: boolean
        x-go-name: MatchDocuments
      match_filter:
        type: string
        x-go-name: MatchFilter
      match_type:
        $ref: '#/definitions/RuleType'
      value:
        type: string
        x-go-name: Value
    type: object
    x-go-package: tryffel.net/go/virtualpaper/models
  ProcessingRuleResp:
    properties:
      action:
        $ref: '#/definitions/processingRuleAction'
      active:
        type: boolean
        x-go-name: Active
      comment:
        type: string
        x-go-name: Comment
      created_at:
        format: int64
        type: integer
        x-go-name: CreatedAd
      filter:
        type: string
        x-go-name: Filter
      id:
        format: int64
        type: integer
        x-go-name: Id
      type:
        type: string
        x-go-name: Type
      updated_at:
        format: int64
        type: integer
        x-go-name: UpdatedAt
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
  RuleType:
    type: string
    x-go-package: tryffel.net/go/virtualpaper/models
  SystemInfo:
    properties:
      commit:
        type: string
        x-go-name: Commit
      documents_processed_past_month:
        format: int64
        type: integer
        x-go-name: DocumentsProcessedLastMonth
      documents_processed_past_week:
        format: int64
        type: integer
        x-go-name: DocumentsProcessedLastWeek
      documents_processed_today:
        format: int64
        type: integer
        x-go-name: DocumentsProcessedToday
      documents_queued:
        format: int64
        type: integer
        x-go-name: DocumentsInQueue
      documents_total:
        format: int64
        type: integer
        x-go-name: DocumentsTotal
      documents_total_size:
        format: int64
        type: integer
        x-go-name: DocumentsTotalSize
      documents_total_size_string:
        type: string
        x-go-name: DocumentsTotalSizeString
      go_version:
        type: string
        x-go-name: GoVersion
      imagemagick_version:
        type: string
        x-go-name: ImagemagickVersion
      name:
        type: string
        x-go-name: Name
      number_cpus:
        format: int64
        type: integer
        x-go-name: NumCpu
      pandoc_installed:
        type: boolean
        x-go-name: PandocInstalled
      poppler_installed:
        type: boolean
        x-go-name: PopplerInstalled
      server_load:
        type: string
        x-go-name: ServerLoad
      tesseract_version:
        type: string
        x-go-name: TesseractVersion
      uptime:
        type: string
        x-go-name: Uptime
      version:
        type: string
        x-go-name: Version
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
  Tag:
    properties:
      comment:
        type: string
        x-go-name: Comment
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      id:
        format: int64
        type: integer
        x-go-name: Id
      key:
        type: string
        x-go-name: Key
      updated_at:
        format: date-time
        type: string
        x-go-name: UpdatedAt
    title: Tag is a per-user label to add to documents. It has many-to-many relationship with documents.
    type: object
    x-go-package: tryffel.net/go/virtualpaper/models
  UserDocumentStatistics:
    properties:
      id:
        description: user id
        format: int64
        type: integer
        x-go-name: UserId
      last_documents_updated:
        description: array of last updated document ids
        example: '[abcd]'
        items:
          type: string
        type: array
        x-go-name: LastDocumentsUpdated
      num_documents:
        description: total number of documents
        example: 53
        format: int64
        type: integer
        x-go-name: NumDocuments
      num_metadata_keys:
        description: total number of metadata keys
        example: 4
        format: int64
        type: integer
        x-go-name: NumMetadataKeys
      num_metadata_values:
        description: total number of metadata values
        example: 14
        format: int64
        type: integer
        x-go-name: NumMetadataValues
      yearly_stats:
        description: per-year statistics
        items:
          properties:
            num_documents:
              description: number of documents
              example: 49
              format: int64
              type: integer
              x-go-name: NumDocuments
            year:
              description: year
              example: 2020
              format: int64
              type: integer
              x-go-name: Year
          type: object
        type: array
        x-go-name: YearlyStats
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
  UserPreferences:
    properties:
      created_at:
        format: int64
        type: integer
        x-go-name: CreatedAt
      documents_count:
        format: int64
        type: integer
        x-go-name: DocumentsCount
      documents_size:
        format: int64
        type: integer
        x-go-name: DocumentsSize
      documents_size_string:
        type: string
        x-go-name: DocumentsSizeString
      email:
        type: string
        x-go-name: Email
      is_admin:
        type: boolean
        x-go-name: IsAdmin
      updated_at:
        format: int64
        type: integer
        x-go-name: UpdatedAt
      user_id:
        description: user
        format: int64
        type: integer
        x-go-name: Id
      user_name:
        type: string
        x-go-name: Name
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
  metadataRequest:
    properties:
      key_id:
        format: int64
        type: integer
        x-go-name: KeyId
      value_id:
        format: int64
        type: integer
        x-go-name: ValueId
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
  processingRuleAction:
    properties:
      date_fmt:
        type: string
        x-go-name: DateFmt
      date_separator:
        type: string
        x-go-name: DateSeparator
      description:
        type: string
        x-go-name: Description
      metadata_key_id:
        format: int64
        type: integer
        x-go-name: MetadataKey
      metadata_value_id:
        format: int64
        type: integer
        x-go-name: MetadataValue
      tag_id:
        format: int64
        type: integer
        x-go-name: Tag
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
info:
  description: Documentation for Virtualpaper API.
  title: API documentation.
  version: 0.1.0
paths:
  /api/v1/admin/documents/process:
    get:
      description: Get documents awaiting processing
      operationId: AdminGetDocumentProcessQueue
      responses:
        "200":
          $ref: '#/responses/RespDocumentProcessingSteps'
        "401":
          $ref: '#/responses/RespForbidden'
        "500":
          $ref: '#/responses/RespInternalError'
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: |-
        Administrator can force re-processing documents.
        Options:
        1. Process all documents in the system. Do not provide user_id or document_id
        2. Process documents for a user: provide user_id.
        3. Process one document: provide document_id.

        In addition, step can be configured. Possible steps are:
        1. 'hash' (calculate document hash)
        2. 'thumbnail' (create document thumbnail)
        3. 'content' (extract content with suitable tool)
        4. 'rules' (run metadata-rules)
        5. 'fts' (index document in full-text-search engine)

        Steps are in order. Supplying e.g. 'content' will result in executing steps 3, 4 and 5.
        Empty body will result in all documents being processed from step 1.
        Depending on document content, processing on document takes anywhere from a second to minutes.
      operationId: AdminForceDocumentProcessing
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/ForceDocumumentsProcessing'
      responses:
        "200":
          $ref: '#/responses/RespOk'
        "400":
          $ref: '#/responses/RespBadRequest'
        "401":
          $ref: '#/responses/RespForbidden'
        "403":
          $ref: '#/responses/RespNotFound'
      summary: Force document processing.
      tags:
      - Admin
  /api/v1/admin/systeminfo:
    get:
      description: Get system information
      operationId: AdminGetSystemInfo
      responses:
        "200":
          $ref: '#/responses/RespAdminSystemInfo'
        "401":
          $ref: '#/responses/RespForbidden'
        "500":
          $ref: '#/responses/RespInternalError'
      tags:
      - Admin
  /api/v1/documents:
    get:
      description: Get documents
      operationId: GetDocuments
      parameters:
      - description: |-
          Json filter containing max two keys: q and metadata.
          Q is full-text-search query.
          Metadata is a metadata filter.
          E.g. 'class:book AND (author:"agatha christie" OR author:"doyle")'
          Filter is json-formatted and must be url-safe.
        example: '''{"q":"my search", "metadata":"class:book"}'''
        in: query
        name: filter
        type: string
        x-go-name: Filter
      - description: 'Order which order results in, either: ''DESC'' or ''ASC''.'
        in: query
        name: order
        type: string
        x-go-name: Order
      - description: Sort field to sort results.
        in: query
        name: sort
        type: string
        x-go-name: Sort
      - description: Page number
        format: int64
        in: query
        name: page
        type: integer
        x-go-name: Page
      - description: Page size.
        format: int64
        in: query
        name: perPage
        type: integer
        x-go-name: PerPage
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      tags:
      - Documents
    post:
      description: Otherwise document is not processed yet and lacks other fields.
      operationId: UploadFile
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      summary: Upload new document file. New document already contains id, name, filename and timestamps.
      tags:
      - Documents
  /api/v1/documents/{id}:
    get:
      description: Downloads original document
      operationId: DownloadDocument
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      tags:
      - Documents
    put:
      description: Updates document
      operationId: UpdateDocument
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      tags:
      - Documents
  /api/v1/documents/{id}/content:
    get:
      description: Get full document parsed content
      operationId: GetDocumentContent
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      tags:
      - Documents
  /api/v1/documents/{id}/jobs:
    get:
      description: Get processing job history related to document
      operationId: GetDocumentJobs
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      tags:
      - Documents
  /api/v1/documents/{id}/metadata:
    post:
      description: Update document metadata
      operationId: UpdateDocumentMetadata
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      tags:
      - Documents
  /api/v1/documents/{id}/preview:
    get:
      operationId: GetDocumentPreview
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      summary: Get document preview, a small png image of first page of document.
      tags:
      - Documents
  /api/v1/documents/stats:
    get:
      description: Get document statistics
      operationId: GetUserDocumentStatistics
      responses:
        "200":
          $ref: '#/responses/RespDocumentStatistics'
        "304":
          $ref: '#/responses/RespNotModified'
        "400":
          $ref: '#/responses/RespBadRequest'
        "401":
          $ref: '#/responses/RespForbidden'
        "403":
          $ref: '#/responses/RespNotFound'
        "500":
          $ref: '#/responses/RespInternalError'
      tags:
      - Documents
  /api/v1/filetypes:
    get:
      description: Get supported file types
      operationId: GetFileTypes
      responses:
        "200": {}
      tags:
      - Public
  /api/v1/location:
    post:
      description: Request document re-processing
      operationId: RequestProcessing
      responses:
        "200":
          $ref: '#/responses/RespOk'
        "400":
          $ref: '#/responses/RespBadRequest'
        "401":
          $ref: '#/responses/RespForbidden'
        "403":
          $ref: '#/responses/RespNotFound'
        "500":
          $ref: '#/responses/RespInternalError'
      tags:
      - Documents
  /api/v1/metadata/keys:
    get:
      description: Get metadata keys
      operationId: GetMetadataKeys
      responses:
        "200":
          $ref: '#/responses/MetadataKeyResponse'
      tags:
      - Metadata
    post:
      description: Add metadata key
      operationId: AddMetadataKey
      responses:
        "200":
          $ref: '#/responses/MetadataKeyResponse'
      tags:
      - Metadata
  /api/v1/metadata/keys/{id}:
    get:
      description: Get metadata key
      operationId: GetMetadataKey
      responses:
        "200":
          $ref: '#/responses/MetadataKeyResponse'
      tags:
      - Metadata
  /api/v1/metadata/keys/{id}/values:
    get:
      description: Get metadata key values
      operationId: GetMetadataKeyValues
      responses:
        "200":
          $ref: '#/responses/MetadataKeyValueResponse'
      tags:
      - Metadata
    post:
      description: Add metadata key values
      operationId: AddMetadataKeyValues
      responses:
        "200":
          $ref: '#/responses/MetadataKeyValueResponse'
      tags:
      - Metadata
  /api/v1/preferences/user:
    get:
      description: Get user preferences
      operationId: GetPreferences
      responses:
        "200":
          $ref: '#/responses/RespUserPreferences'
        "304":
          $ref: '#/responses/RespNotModified'
        "400":
          $ref: '#/responses/RespBadRequest'
        "401":
          $ref: '#/responses/RespForbidden'
        "403":
          $ref: '#/responses/RespNotFound'
        "500":
          $ref: '#/responses/RespInternalError'
      tags:
      - Preferences
  /api/v1/processing/rules:
    get:
      description: Get processing rules
      operationId: GetRules
      responses:
        "200":
          $ref: '#/responses/ProcessingRuleResponse'
      tags:
      - Processing
    post:
      description: Add processing rule
      operationId: AddRule
      responses:
        "200":
          $ref: '#/responses/ProcessingRuleResponse'
        "304":
          $ref: '#/responses/RespNotModified'
        "400":
          $ref: '#/responses/RespBadRequest'
        "401":
          $ref: '#/responses/RespForbidden'
        "403":
          $ref: '#/responses/RespNotFound'
        "500":
          $ref: '#/responses/RespInternalError'
      tags:
      - Processing
  /api/v1/processing/rules/{id}:
    get:
      description: Get processing rule by id
      operationId: GetRule
      responses:
        "200":
          $ref: '#/responses/ProcessingRuleResponse'
      tags:
      - Processing
  /api/v1/version:
    get:
      description: Get server version
      operationId: GetVersion
      responses:
        "200": {}
      tags:
      - Public
    post:
      description: Login
      operationId: Login
      responses:
        "200": {}
      tags:
      - Authentication
produces:
- application/json
responses:
  DocumentResponse:
    description: DocumentsResponse contains array of documents
    schema:
      items:
        $ref: '#/definitions/DocumentResponse'
      type: array
  MetadataKeyResponse:
    schema:
      items:
        $ref: '#/definitions/MetadataValue'
      type: array
  ProcessingRuleArrayResponse:
    schema:
      items:
        $ref: '#/definitions/ProcessingRuleResp'
      type: array
  ProcessingRuleRequest:
    headers:
      action: {}
      active:
        type: boolean
      comment:
        type: string
      filter:
        type: string
    schema:
      $ref: '#/definitions/processingRuleAction'
  RespAdminSystemInfo:
    description: System information
    schema:
      $ref: '#/definitions/SystemInfo'
  RespBadRequest:
    description: request validation failed
    schema:
      properties:
        error:
          type: string
          x-go-name: Error
      type: object
  RespDocumentProcessingSteps:
    description: Documents and processing steps pending
    schema:
      items:
        $ref: '#/definitions/DocumentProcessStep'
      type: array
  RespDocumentStatistics:
    description: Document / usage statistics
    schema:
      $ref: '#/definitions/UserDocumentStatistics'
  RespForbidden:
    description: action forbidden
  RespInternalError:
    description: internal error occured and server was unable to complete operation
  RespNotFound:
    description: resource not found
  RespNotModified:
    description: Content already exists and has not been modified
  RespOk:
    description: Request ok
  RespUserPreferences:
    description: User preferences
    schema:
      $ref: '#/definitions/UserPreferences'
  SystemInfo:
    headers:
      commit:
        type: string
      documents_processed_past_month:
        format: int64
        type: integer
      documents_processed_past_week:
        format: int64
        type: integer
      documents_processed_today:
        format: int64
        type: integer
      documents_queued:
        format: int64
        type: integer
      documents_total:
        format: int64
        type: integer
      documents_total_size:
        format: int64
        type: integer
      documents_total_size_string:
        type: string
      go_version:
        type: string
      imagemagick_version:
        type: string
      name:
        type: string
      number_cpus:
        format: int64
        type: integer
      pandoc_installed:
        type: boolean
      poppler_installed:
        type: boolean
      server_load:
        type: string
      tesseract_version:
        type: string
      uptime:
        type: string
      version:
        type: string
schemes:
- http
- https
security:
- api_key: []
securityDefinitions:
  api_key:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
