consumes:
- application/json
definitions:
  DocumentProcessStep:
    properties:
      document_id:
        type: string
        x-go-name: DocumentId
      step:
        type: string
        x-go-name: Step
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
  DocumentResponse:
    description: DocumentResponse
    properties:
      content:
        type: string
        x-go-name: Content
      created_at:
        format: int64
        type: integer
        x-go-name: CreatedAt
      date:
        format: int64
        type: integer
        x-go-name: Date
      description:
        type: string
        x-go-name: Description
      download_url:
        type: string
        x-go-name: DownloadUrl
      filename:
        type: string
        x-go-name: Filename
      id:
        format: uuid
        type: string
        x-go-name: Id
      metadata:
        items:
          $ref: '#/definitions/Metadata'
        type: array
        x-go-name: Metadata
      mimetype:
        type: string
        x-go-name: Mimetype
      name:
        type: string
        x-go-name: Name
      pretty_size:
        type: string
        x-go-name: PrettySize
      preview_url:
        type: string
        x-go-name: PreviewUrl
      size:
        format: int64
        type: integer
        x-go-name: Size
      status:
        type: string
        x-go-name: Status
      tags:
        items:
          $ref: '#/definitions/Tag'
        type: array
        x-go-name: Tags
      type:
        type: string
        x-go-name: Type
      updated_at:
        format: int64
        type: integer
        x-go-name: UpdatedAt
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
  DocumentUpdateRequestBody:
    description: DocumentUpdateRequest
    properties:
      date:
        format: int64
        type: integer
        x-go-name: Date
      description:
        type: string
        x-go-name: Description
      filename:
        type: string
        x-go-name: Filename
      metadata:
        items:
          $ref: '#/definitions/metadataRequest'
        type: array
        x-go-name: Metadata
      name:
        type: string
        x-go-name: Name
    type: object
    x-go-name: DocumentUpdateRequest
    x-go-package: tryffel.net/go/virtualpaper/api
  Metadata:
    description: Metadata is metadata key-value pair assigned to document
    properties:
      key:
        type: string
        x-go-name: Key
      key_id:
        format: int64
        type: integer
        x-go-name: KeyId
      value:
        type: string
        x-go-name: Value
      value_id:
        format: int64
        type: integer
        x-go-name: ValueId
    type: object
    x-go-package: tryffel.net/go/virtualpaper/models
  MetadataKey:
    properties:
      comment:
        type: string
        x-go-name: Comment
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      id:
        format: int64
        type: integer
        x-go-name: Id
      key:
        type: string
        x-go-name: Key
    type: object
    x-go-package: tryffel.net/go/virtualpaper/models
  MetadataValue:
    properties:
      comment:
        type: string
        x-go-name: Comment
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      id:
        format: int64
        type: integer
        x-go-name: Id
      key:
        type: string
        x-go-name: Key
      value:
        type: string
        x-go-name: Value
    type: object
    x-go-package: tryffel.net/go/virtualpaper/models
  ProcessingRuleResp:
    properties:
      action:
        $ref: '#/definitions/processingRuleAction'
      active:
        type: boolean
        x-go-name: Active
      comment:
        type: string
        x-go-name: Comment
      created_at:
        format: int64
        type: integer
        x-go-name: CreatedAd
      filter:
        type: string
        x-go-name: Filter
      id:
        format: int64
        type: integer
        x-go-name: Id
      type:
        type: string
        x-go-name: Type
      updated_at:
        format: int64
        type: integer
        x-go-name: UpdatedAt
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
  Tag:
    properties:
      comment:
        type: string
        x-go-name: Comment
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      id:
        format: int64
        type: integer
        x-go-name: Id
      key:
        type: string
        x-go-name: Key
      updated_at:
        format: date-time
        type: string
        x-go-name: UpdatedAt
    title: Tag is a per-user label to add to documents. It has many-to-many relationship with documents.
    type: object
    x-go-package: tryffel.net/go/virtualpaper/models
  UserDocumentStatistics:
    properties:
      id:
        description: user id
        format: int64
        type: integer
        x-go-name: UserId
      last_documents_updated:
        description: array of last updated document ids
        example: '[abcd]'
        items:
          type: string
        type: array
        x-go-name: LastDocumentsUpdated
      num_documents:
        description: total number of documents
        example: 53
        format: int64
        type: integer
        x-go-name: NumDocuments
      num_metadata_keys:
        description: total number of metadata keys
        example: 4
        format: int64
        type: integer
        x-go-name: NumMetadataKeys
      num_metadata_values:
        description: total number of metadata values
        example: 14
        format: int64
        type: integer
        x-go-name: NumMetadataValues
      yearly_stats:
        description: per-year statistics
        items:
          properties:
            num_documents:
              description: number of documents
              example: 49
              format: int64
              type: integer
              x-go-name: NumDocuments
            year:
              description: year
              example: 2020
              format: int64
              type: integer
              x-go-name: Year
          type: object
        type: array
        x-go-name: YearlyStats
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
  UserPreferences:
    properties:
      created_at:
        format: int64
        type: integer
        x-go-name: CreatedAt
      email:
        type: string
        x-go-name: Email
      updated_at:
        format: int64
        type: integer
        x-go-name: UpdatedAt
      user_id:
        description: user
        format: int64
        type: integer
        x-go-name: Id
      user_name:
        type: string
        x-go-name: Name
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
  metadataRequest:
    properties:
      key_id:
        format: int64
        type: integer
        x-go-name: KeyId
      value_id:
        format: int64
        type: integer
        x-go-name: ValueId
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
  processingRuleAction:
    properties:
      date_fmt:
        type: string
        x-go-name: DateFmt
      date_separator:
        type: string
        x-go-name: DateSeparator
      description:
        type: string
        x-go-name: Description
      metadata_key_id:
        format: int64
        type: integer
        x-go-name: MetadataKey
      metadata_value_id:
        format: int64
        type: integer
        x-go-name: MetadataValue
      tag_id:
        format: int64
        type: integer
        x-go-name: Tag
    type: object
    x-go-package: tryffel.net/go/virtualpaper/api
info:
  description: Documentation for Virtualpaper API.
  title: API documentation.
  version: 0.1.0
paths:
  /api/v1/admin/documents/process:
    get:
      description: Get documents awaiting processing
      operationId: AdminGetDocumentProcessQueue
      responses:
        "200":
          $ref: '#/responses/RespDocumentProcessingSteps'
        "401":
          $ref: '#/responses/RespForbidden'
        "500":
          $ref: '#/responses/RespInternalError'
      tags:
      - Admin
    post:
      description: Force document processing
      operationId: AdminForceDocumentProcessing
      responses:
        "200": {}
      tags:
      - Admin
  /api/v1/documents:
    get:
      description: Get documents
      operationId: GetDocuments
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      tags:
      - Documents
    post:
      description: Otherwise document is not processed yet and lacks other fields.
      operationId: UploadFile
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      summary: Upload new document file. New document already contains id, name, filename and timestamps.
      tags:
      - Documents
  /api/v1/documents/{id}:
    get:
      description: Downloads original document
      operationId: DownloadDocument
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      tags:
      - Documents
    put:
      description: Updates document
      operationId: UpdateDocument
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      tags:
      - Documents
  /api/v1/documents/{id}/content:
    get:
      description: Get full document parsed content
      operationId: GetDocumentContent
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      tags:
      - Documents
  /api/v1/documents/{id}/jobs:
    get:
      description: Get processing job history related to document
      operationId: GetDocumentJobs
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      tags:
      - Documents
  /api/v1/documents/{id}/metadata:
    post:
      description: Update document metadata
      operationId: UpdateDocumentMetadata
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      tags:
      - Documents
  /api/v1/documents/{id}/preview:
    get:
      operationId: GetDocumentPreview
      responses:
        "200":
          $ref: '#/responses/DocumentResponse'
      summary: Get document preview, a small png image of first page of document.
      tags:
      - Documents
  /api/v1/documents/stats:
    get:
      description: Get document statistics
      operationId: GetUserDocumentStatistics
      responses:
        "200":
          $ref: '#/responses/RespDocumentStatistics'
        "304":
          $ref: '#/responses/RespNotModified'
        "400":
          $ref: '#/responses/RespBadRequest'
        "401":
          $ref: '#/responses/RespForbidden'
        "403":
          $ref: '#/responses/RespNotFound'
        "500":
          $ref: '#/responses/RespInternalError'
      tags:
      - Documents
  /api/v1/metadata/keys:
    get:
      description: Get metadata keys
      operationId: GetMetadataKeys
      responses:
        "200":
          $ref: '#/responses/MetadataKeyResponse'
      tags:
      - Metadata
    post:
      description: Add metadata key
      operationId: AddMetadataKey
      responses:
        "200":
          $ref: '#/responses/MetadataKeyResponse'
      tags:
      - Metadata
  /api/v1/metadata/keys/{id}:
    get:
      description: Get metadata key
      operationId: GetMetadataKey
      responses:
        "200":
          $ref: '#/responses/MetadataKeyResponse'
      tags:
      - Metadata
  /api/v1/metadata/keys/{id}/values:
    get:
      description: Get metadata key values
      operationId: GetMetadataKeyValues
      responses:
        "200":
          $ref: '#/responses/MetadataKeyValueResponse'
      tags:
      - Metadata
    post:
      description: Add metadata key values
      operationId: AddMetadataKeyValues
      responses:
        "200":
          $ref: '#/responses/MetadataKeyValueResponse'
      tags:
      - Metadata
  /api/v1/preferences/user:
    get:
      description: Get user preferences
      operationId: GetPreferences
      responses:
        "200":
          $ref: '#/responses/RespUserPreferences'
        "304":
          $ref: '#/responses/RespNotModified'
        "400":
          $ref: '#/responses/RespBadRequest'
        "401":
          $ref: '#/responses/RespForbidden'
        "403":
          $ref: '#/responses/RespNotFound'
        "500":
          $ref: '#/responses/RespInternalError'
      tags:
      - Preferences
  /api/v1/processing/rules:
    get:
      description: Get processing rules
      operationId: GetRules
      responses:
        "200":
          $ref: '#/responses/ProcessingRuleResponse'
      tags:
      - Processing
    post:
      description: Add processing rule
      operationId: AddRule
      responses:
        "200":
          $ref: '#/responses/ProcessingRuleResponse'
        "304":
          $ref: '#/responses/RespNotModified'
        "400":
          $ref: '#/responses/RespBadRequest'
        "401":
          $ref: '#/responses/RespForbidden'
        "403":
          $ref: '#/responses/RespNotFound'
        "500":
          $ref: '#/responses/RespInternalError'
      tags:
      - Processing
  /api/v1/processing/rules/{id}:
    get:
      description: Get processing rule by id
      operationId: GetRule
      responses:
        "200":
          $ref: '#/responses/ProcessingRuleResponse'
      tags:
      - Processing
  /api/v1/version:
    get:
      description: Get server version
      operationId: GetVersion
      responses:
        "200": {}
      tags:
      - Public
    post:
      description: Login
      operationId: Login
      responses:
        "200": {}
      tags:
      - Authentication
produces:
- application/json
responses:
  DocumentResponse:
    description: DocumentsResponse contains array of documents
    schema:
      items:
        $ref: '#/definitions/DocumentResponse'
      type: array
  MetadataKeyResponse:
    schema:
      items:
        $ref: '#/definitions/MetadataValue'
      type: array
  ProcessingRuleArrayResponse:
    schema:
      items:
        $ref: '#/definitions/ProcessingRuleResp'
      type: array
  ProcessingRuleRequest:
    headers:
      action: {}
      active:
        type: boolean
      comment:
        type: string
      filter:
        type: string
    schema:
      $ref: '#/definitions/processingRuleAction'
  RespBadRequest:
    description: request validation failed
    schema:
      properties:
        error:
          type: string
          x-go-name: Error
      type: object
  RespDocumentProcessingSteps:
    description: Documents and processing steps pending
    schema:
      items:
        $ref: '#/definitions/DocumentProcessStep'
      type: array
  RespDocumentStatistics:
    description: Document / usage statistics
    schema:
      $ref: '#/definitions/UserDocumentStatistics'
  RespForbidden:
    description: action forbidden
  RespInternalError:
    description: internal error occured and server was unable to complete operation
  RespNotFound:
    description: resource not found
  RespNotModified:
    description: Content already exists and has not been modified
  RespOk:
    description: Request ok
  RespUserPreferences:
    description: User preferences
    schema:
      $ref: '#/definitions/UserPreferences'
schemes:
- http
- https
security:
- api_key: []
securityDefinitions:
  api_key:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
